<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[iDealife]]></title>
  <subtitle><![CDATA[Stay hungry. Stay foolish.]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://idealife.github.io/"/>
  <updated>2015-10-22T13:27:37.000Z</updated>
  <id>http://idealife.github.io/</id>
  
  <author>
    <name><![CDATA[Super Dong]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[NSScrollView你可能遇到的坑]]></title>
    <link href="http://idealife.github.io/2015/10/21/NSScrollView%E4%BD%A0%E5%8F%AF%E8%83%BD%E9%81%87%E5%88%B0%E7%9A%84%E5%9D%91/"/>
    <id>http://idealife.github.io/2015/10/21/NSScrollView你可能遇到的坑/</id>
    <published>2015-10-21T15:13:56.000Z</published>
    <updated>2015-10-22T13:27:37.000Z</updated>
    <content type="html"><![CDATA[<p>换了一台用来开发的Mac【就叫Mac A吧】，程序运行一切正常。<br>可是仔细一看，发现程序中某个界面的表格区域竟然默认显示了滚动条，很是奇怪。<br><img src="https://raw.githubusercontent.com/idealife/idealife.github.io/master/img/4_2.png" alt="图片"><br>因为我明明设置NSScrollView的属性是Automatically Hide Scroller，如图。正常情况下我鼠标放到表格区域才会出现滚动条的。<br><img src="https://raw.githubusercontent.com/idealife/idealife.github.io/master/img/4_1.png" alt="图片"><br>又特地去原来的Mac【Mac B】上查看效果，滚动条默认是不显示的，两个都是10.9.5的系统，显示效果竟然不一样，有点想不明白。随后又找了个10.10的系统【Mac C】对比效果，也是不会自动显示滚动条的。正当一筹莫展中，猛然发现Mac A的Xcode也是默认显示着滚动条。<br>难道是系统的某个显示效果设置引起的？<br><a id="more"></a><br>费尽周折，果不其然，在“偏好设置”–“通用”中找到了滚动条的显示设置，如下图<br><img src="https://raw.githubusercontent.com/idealife/idealife.github.io/master/img/4_3.png" alt="图片"></p>
<p>如果系统的设置是“根据鼠标或触控板自动显示”<br><img src="https://raw.githubusercontent.com/idealife/idealife.github.io/master/img/4_3.png" alt="图片"><br>并且Mac是连接了Magic mouse或者Trackpad的，那么即使Automatically Hide Scroller不选择，默认情况下也是不显示滚动条的，只有滚动的时候才会出现。<br>但一旦断开这些设备，用普通USB鼠标，那么滚动条则会一直显示。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>换了一台用来开发的Mac【就叫Mac A吧】，程序运行一切正常。<br>可是仔细一看，发现程序中某个界面的表格区域竟然默认显示了滚动条，很是奇怪。<br><img src="https://raw.githubusercontent.com/idealife/idealife.github.io/master/img/4_2.png" alt="图片"><br>因为我明明设置NSScrollView的属性是Automatically Hide Scroller，如图。正常情况下我鼠标放到表格区域才会出现滚动条的。<br><img src="https://raw.githubusercontent.com/idealife/idealife.github.io/master/img/4_1.png" alt="图片"><br>又特地去原来的Mac【Mac B】上查看效果，滚动条默认是不显示的，两个都是10.9.5的系统，显示效果竟然不一样，有点想不明白。随后又找了个10.10的系统【Mac C】对比效果，也是不会自动显示滚动条的。正当一筹莫展中，猛然发现Mac A的Xcode也是默认显示着滚动条。<br>难道是系统的某个显示效果设置引起的？<br>]]>
    
    </summary>
    
      <category term="Mac OS X" scheme="http://idealife.github.io/tags/Mac-OS-X/"/>
    
      <category term="Xcode" scheme="http://idealife.github.io/tags/Xcode/"/>
    
      <category term="iDev" scheme="http://idealife.github.io/categories/iDev/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[对xib设计界面中File's Owner以及Objects的理解]]></title>
    <link href="http://idealife.github.io/2015/10/10/%E5%AF%B9xib%E8%AE%BE%E8%AE%A1%E7%95%8C%E9%9D%A2%E4%B8%ADFile-s-Owner%E4%BB%A5%E5%8F%8AObjects%E7%9A%84%E7%90%86%E8%A7%A3/"/>
    <id>http://idealife.github.io/2015/10/10/对xib设计界面中File-s-Owner以及Objects的理解/</id>
    <published>2015-10-10T03:50:23.000Z</published>
    <updated>2015-10-10T04:36:38.000Z</updated>
    <content type="html"><![CDATA[<p>File’s Owner以及Objects在设计界面中的设置虽然大大地方便了程序开发，可以用更少的代码，实现复杂的功能。<br>但是对接触不久的开发者来说，会增加很多的迷惑性，学习成本相对高了。另一方面对于这些的理解和使用很多资料中也只是一笔带过。</p>
<p><strong>File’s Owner</strong><br>File’s Owner只是设计时的占位符，只有程序运行时，谁加载了此xib文件，谁才是其Owner。<br>可以在加载的代码initWithWindowNibName:Owenr:中指定其owner，也就成了运行时的File’s Owner。<br>在设计界面中File’s Owner的Custom Class可以随意指定，但指定的Class不符合outlet连接规则时，会有如下图的提示，<br><a id="more"></a><br><img src="https://raw.githubusercontent.com/idealife/idealife.github.io/master/img/3_2.png" alt="图片"><br>因为在运行中的owner就会完全遵循设计时的Outlets中的连接规则去执行(必须保持一致，否则调用方法时会出现找不到方法）。<br>因此，设计时就要指定好加载该xib的class（或者有相同的接口规范的class，这就大大提高了程序的灵活性）。</p>
<p><strong>Objects</strong><br>Objects中的添加的NSObject（也可以是NSViewContrller），在xib文件加载的时候都会被实例化。可以这么理解，等效于xib中拖放的控件，可以分2种用途，1、不显示，用于处理与界面之间的交互。2、在代码中控制界面的显示。<br>这些Object都可以通过outlet连接到File’s owner中，这样子File’s owner就可以统一管理界面中的元素了。Object之间也可以相互之间连接。<br><img src="https://raw.githubusercontent.com/idealife/idealife.github.io/master/img/3_1.png" alt="图片"></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>File’s Owner以及Objects在设计界面中的设置虽然大大地方便了程序开发，可以用更少的代码，实现复杂的功能。<br>但是对接触不久的开发者来说，会增加很多的迷惑性，学习成本相对高了。另一方面对于这些的理解和使用很多资料中也只是一笔带过。</p>
<p><strong>File’s Owner</strong><br>File’s Owner只是设计时的占位符，只有程序运行时，谁加载了此xib文件，谁才是其Owner。<br>可以在加载的代码initWithWindowNibName:Owenr:中指定其owner，也就成了运行时的File’s Owner。<br>在设计界面中File’s Owner的Custom Class可以随意指定，但指定的Class不符合outlet连接规则时，会有如下图的提示，<br>]]>
    
    </summary>
    
      <category term="Xcode" scheme="http://idealife.github.io/tags/Xcode/"/>
    
      <category term="Xib" scheme="http://idealife.github.io/tags/Xib/"/>
    
      <category term="iDev" scheme="http://idealife.github.io/categories/iDev/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[XCode调试的那些事儿（一）]]></title>
    <link href="http://idealife.github.io/2015/10/10/XCode%E8%B0%83%E8%AF%95%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B%E5%84%BF%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>http://idealife.github.io/2015/10/10/XCode调试的那些事儿（一）/</id>
    <published>2015-10-10T03:09:39.000Z</published>
    <updated>2015-10-10T03:36:57.000Z</updated>
    <content type="html"><![CDATA[<p>苹果基本上每年都会有一次大的系统升级，开发工具当然更需要提前一步。不过每次的更新换代，或多或少会带来很多诡异的问题。<br>我的项目原先是在Xcode6.4上的，很顺利的升级到了7.0，编译运行都很正常。<br>可是总是会在固定的代码位置自动停下来，和下了断点的效果是一样一样的。提示：Thread 1: breakpoint 3.1<br>情景重现：<br><img src="https://raw.githubusercontent.com/idealife/idealife.github.io/master/img/2-0.png" alt="断点"><br>难道是代码有异常？注释掉这回代码就正常了，但是@try @catch并没有捕获任何异常。<br>真的是奇了怪了。<br>整个项目clean后问题依旧，然后各种捣鼓……<br>搜了一圈有人指出是更新开发环境引起的症状，[%&gt;_&lt;%]，废了半天时间找代码问题，最后竟然是苹果的事情。<br><a id="more"></a><br>屏蔽的方法是在调试窗口中，把全局的断点状态标记关闭后，就能顺利执行代码了。<br><img src="https://raw.githubusercontent.com/idealife/idealife.github.io/master/img/2-1.png" alt="方法"><br>吐槽：苹果，请你好好用心做产品吧，现在黑iCloud的人也越来越多了！</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>苹果基本上每年都会有一次大的系统升级，开发工具当然更需要提前一步。不过每次的更新换代，或多或少会带来很多诡异的问题。<br>我的项目原先是在Xcode6.4上的，很顺利的升级到了7.0，编译运行都很正常。<br>可是总是会在固定的代码位置自动停下来，和下了断点的效果是一样一样的。提示：Thread 1: breakpoint 3.1<br>情景重现：<br><img src="https://raw.githubusercontent.com/idealife/idealife.github.io/master/img/2-0.png" alt="断点"><br>难道是代码有异常？注释掉这回代码就正常了，但是@try @catch并没有捕获任何异常。<br>真的是奇了怪了。<br>整个项目clean后问题依旧，然后各种捣鼓……<br>搜了一圈有人指出是更新开发环境引起的症状，[%&gt;_&lt;%]，废了半天时间找代码问题，最后竟然是苹果的事情。<br>]]>
    
    </summary>
    
      <category term="Xcode" scheme="http://idealife.github.io/tags/Xcode/"/>
    
      <category term="调试" scheme="http://idealife.github.io/tags/%E8%B0%83%E8%AF%95/"/>
    
      <category term="iDev" scheme="http://idealife.github.io/categories/iDev/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[initWithFrame和initWithCoder的新发现]]></title>
    <link href="http://idealife.github.io/2015/10/10/initWithFrame%E5%92%8CinitWithCoder%E7%9A%84%E6%96%B0%E5%8F%91%E7%8E%B0/"/>
    <id>http://idealife.github.io/2015/10/10/initWithFrame和initWithCoder的新发现/</id>
    <published>2015-10-10T01:38:52.000Z</published>
    <updated>2015-10-10T02:59:29.000Z</updated>
    <content type="html"><![CDATA[<p><strong>背景</strong><br>一般的认识是这样子的：<br>1、当我们所写的程序里没用用Nib文件(XIB)时,用代码控制视图内容，需要调用initWithFrame去初始化<br><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">id</span>)initWithFrame:(<span class="built_in">CGRect</span>)frame</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">self</span> =[superinitWithFrame:frame]) &#123;</span><br><span class="line">        <span class="comment">// 初始化代码</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">self</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>2、用于视图加载nib文件，从nib中加载对象实例时，使用 initWithCoder初始化这些实例对象<br><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">id</span>)initWithCoder:(<span class="built_in">NSCoder</span>*)coder</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">self</span> =[superinitWithcoder:coder]) &#123;</span><br><span class="line">        <span class="comment">// 初始化代码</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">self</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>作为一个初学者，我对上面的知识点深信不疑。<br>但是一个是github上的项目，彻底打乱了我的“三观”。我按照给的demo的流程创建了我的程序，结果我的项目死活不会去调用initWithFrame(该控件内部有初始化代码)，导致不能出现正常的效果。而是会去执行 initWithCoder。<br>如果是多一事不如少一事的心态的话，我在initWithCoder 中增加初始化代码这个事情就结束了。<br>不过我是不会放过这个学习的机会的。按照我的认知，我这边的执行流程才是正确的，因为用到了nib文件。但是我真的特别好奇他是怎么做到的，到底是用了什么黑科技。各种尝试探索都无解后，QQ的技术群在深夜中也被我刷的火热。<br>刨根问底之路又开始了。<br><a id="more"></a></p>
<p><strong>探索</strong><br>偶然间发现苹果官方的customview也是会去执行initWithFrame 。不科学啊。而我完全再次仿造的项目还是很固执地执行initWithCoder。<br><img src="https://raw.githubusercontent.com/idealife/idealife.github.io/master/img/1_1.png" alt="执行对比"><br><a href="https://developer.apple.com/library/mac/samplecode/DragItemAround/Introduction/Intro.html#//apple_ref/doc/uid/DTS10003900" target="_blank" rel="external">官方Demo</a><br>于是简单替换了一下xib,我的项目竟然也执行了initWithFrame。看来还是xib中配置引起的。仔细对比了一遍（其实还是有点仓促的，还在忙其他的事情），毫无收获，又开始对比xib源文件（xml格式），很为是不同版本的Xcode生成的，因此差异还是很大，是个比较麻烦的工作。同时也把这个情况公布了，在几个群友的帮助一下。终于发现了打开这个大门的钥匙。</p>
<p><strong>真相</strong><br>新版本的Xcode中有个Prefer coder的选项，新工程的xib都是默认选中的，对应的xml文件中会有customObjectInstantitationMethod=”direct”的属性值。这个属性决定了到底是执行initWithFrame还是initWithCoder。<br><img src="https://raw.githubusercontent.com/idealife/idealife.github.io/master/img/1_2.png" alt="结果1"><br><img src="https://raw.githubusercontent.com/idealife/idealife.github.io/master/img/1_3.jpg" alt="结果2"></p>
]]></content>
    <summary type="html">
    <![CDATA[<p><strong>背景</strong><br>一般的认识是这样子的：<br>1、当我们所写的程序里没用用Nib文件(XIB)时,用代码控制视图内容，需要调用initWithFrame去初始化<br><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">id</span>)initWithFrame:(<span class="built_in">CGRect</span>)frame</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">self</span> =[superinitWithFrame:frame]) &#123;</span><br><span class="line">        <span class="comment">// 初始化代码</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">self</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>2、用于视图加载nib文件，从nib中加载对象实例时，使用 initWithCoder初始化这些实例对象<br><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">id</span>)initWithCoder:(<span class="built_in">NSCoder</span>*)coder</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">self</span> =[superinitWithcoder:coder]) &#123;</span><br><span class="line">        <span class="comment">// 初始化代码</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">self</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>作为一个初学者，我对上面的知识点深信不疑。<br>但是一个是github上的项目，彻底打乱了我的“三观”。我按照给的demo的流程创建了我的程序，结果我的项目死活不会去调用initWithFrame(该控件内部有初始化代码)，导致不能出现正常的效果。而是会去执行 initWithCoder。<br>如果是多一事不如少一事的心态的话，我在initWithCoder 中增加初始化代码这个事情就结束了。<br>不过我是不会放过这个学习的机会的。按照我的认知，我这边的执行流程才是正确的，因为用到了nib文件。但是我真的特别好奇他是怎么做到的，到底是用了什么黑科技。各种尝试探索都无解后，QQ的技术群在深夜中也被我刷的火热。<br>刨根问底之路又开始了。<br>]]>
    
    </summary>
    
      <category term="OSX" scheme="http://idealife.github.io/tags/OSX/"/>
    
      <category term="Xcode" scheme="http://idealife.github.io/tags/Xcode/"/>
    
      <category term="iDev" scheme="http://idealife.github.io/categories/iDev/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Apple Watch远程通知的实现以及真机实测]]></title>
    <link href="http://idealife.github.io/2015/10/02/Apple-Watch%E8%BF%9C%E7%A8%8B%E9%80%9A%E7%9F%A5%E7%9A%84%E5%AE%9E%E7%8E%B0%E4%BB%A5%E5%8F%8A%E7%9C%9F%E6%9C%BA%E5%AE%9E%E6%B5%8B/"/>
    <id>http://idealife.github.io/2015/10/02/Apple-Watch远程通知的实现以及真机实测/</id>
    <published>2015-10-02T09:09:55.000Z</published>
    <updated>2015-10-21T15:13:35.000Z</updated>
    <content type="html"><![CDATA[<p><strong>题记：</strong>任何一款优秀产品的背后都是一群为此呕心沥血的程序猿，前方多坑，注意避让！</p>
<p><strong>注意事项</strong><br>  1、真机测试的时候最方便的应该是使用adhoc证书，这个是苹果推送的要求。<br>  2、<strong>手表一定要戴在手腕上！手表一定要戴在手腕上！手表一定要戴在手腕上！</strong>重要的事情要说3遍。我曾傻傻地把手表放在桌上等通知，结果半天都没收到通知，通知全在手机上显示了。<br>  3、手机需要处于“黑屏状态”，只要屏幕亮着，消息都会出现在手机上。<br>  4、推送服务器的<code>JSON Payloads</code>格式一般需要重新调整。原先只有手机的时候alert只要有内容即可，现在需要分为title和body两部分了。如果要在手表中显示自定义通知样式，增加交互按钮，还需要定义category，value要和Watch中的Storyboard通知界面中的identifier一致，否则将显示苹果默认的通知样式，只有一个关闭按钮。<br>  新结构如下：<br>  {<br>    “aps” : {<br>        “alert” : {<br>            “title” : “新通知”,<br>            “body” : “OS X El Captain正式版今天推送……”,<br>        },<br>        “category”:”respond”,<br>        “badge” : 5,<br>    }<br>  }<br><a id="more"></a><br><strong>自定义推送通知样式的代码示例：</strong><br>1、在手机端app的AppDelegate中注册推送通知的影响按钮<br><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">void</span>)registerSettingsAndCategories &#123;</span><br><span class="line"><span class="comment">// Create a mutable set to store the category definitions.</span></span><br><span class="line"><span class="built_in">NSMutableSet</span>* categories = [<span class="built_in">NSMutableSet</span> set];</span><br><span class="line"></span><br><span class="line"><span class="comment">// Define the actions for a meeting invite notification.</span></span><br><span class="line"><span class="built_in">UIMutableUserNotificationAction</span>* acceptAction = [[<span class="built_in">UIMutableUserNotificationAction</span> alloc] init];</span><br><span class="line">acceptAction<span class="variable">.title</span> = <span class="built_in">NSLocalizedString</span>(<span class="string">@"Repondre"</span>, <span class="string">@"Repondre commentaire"</span>);</span><br><span class="line">acceptAction<span class="variable">.identifier</span> = <span class="string">@"respond"</span>;</span><br><span class="line">acceptAction<span class="variable">.activationMode</span> = <span class="built_in">UIUserNotificationActivationModeForeground</span>; <span class="comment">//**前台处理**.</span></span><br><span class="line">acceptAction<span class="variable">.authenticationRequired</span> = <span class="literal">NO</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">UIMutableUserNotificationAction</span>* declineAction = [[<span class="built_in">UIMutableUserNotificationAction</span> alloc] init];</span><br><span class="line">declineAction<span class="variable">.title</span> = <span class="built_in">NSLocalizedString</span>(<span class="string">@"Decline"</span>, <span class="string">@"Decline invitation"</span>);</span><br><span class="line">declineAction<span class="variable">.identifier</span> = <span class="string">@"decline"</span>;</span><br><span class="line">declineAction<span class="variable">.activationMode</span> = <span class="built_in">UIUserNotificationActivationModeBackground</span>;<span class="comment">//**后台处理**</span></span><br><span class="line">declineAction<span class="variable">.authenticationRequired</span> = <span class="literal">NO</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Create the category object and add it to the set.</span></span><br><span class="line"><span class="built_in">UIMutableUserNotificationCategory</span>* inviteCategory = [[<span class="built_in">UIMutableUserNotificationCategory</span> alloc] init];</span><br><span class="line">[inviteCategory setActions:@[acceptAction,declineAction]</span><br><span class="line">                forContext:<span class="built_in">UIUserNotificationActionContextDefault</span>];</span><br><span class="line">inviteCategory<span class="variable">.identifier</span> = <span class="string">@"respond"</span>; <span class="comment">//**这一行很重要**</span></span><br><span class="line"></span><br><span class="line">[categories addObject:inviteCategory];</span><br><span class="line"></span><br><span class="line"><span class="comment">//Configure other actions and categories and add them to the set...</span></span><br><span class="line"><span class="built_in">UIUserNotificationSettings</span>* settings = [<span class="built_in">UIUserNotificationSettings</span> settingsForTypes:</span><br><span class="line">                                        (<span class="built_in">UIUserNotificationTypeAlert</span> | <span class="built_in">UIUserNotificationTypeBadge</span> | <span class="built_in">UIUserNotificationTypeSound</span>)</span><br><span class="line">                                                                         categories:categories];</span><br><span class="line"></span><br><span class="line">[[<span class="built_in">UIApplication</span> sharedApplication] registerUserNotificationSettings:settings];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>上述代码是在 appdelegate 中的<br>-(BOOL)application:(UIApplication <em>)application didFinishLaunchingWithOptions:(NSDictionary </em>)launchOptions调用的。<br>2、设置推送服务器<code>Apns server</code>的消息如下<br><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">"aps"</span> : &#123;</span><br><span class="line">      <span class="string">"alert"</span> : &#123;</span><br><span class="line">          <span class="string">"title"</span> : <span class="string">"新通知"</span>,</span><br><span class="line">          <span class="string">"body"</span> : <span class="string">"OS X El Captain正式版今天推送......"</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="string">"category"</span>:<span class="string">"respond"</span>,</span><br><span class="line">      <span class="string">"badge"</span> : <span class="number">5</span>,</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>3、在WatchKitExtention中处理前台的按钮事件<br><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">void</span>)handleActionWithIdentifier:(<span class="built_in">NSString</span> *)identifier forRemoteNotification:(<span class="built_in">NSDictionary</span> *)remoteNotification&#123;</span><br><span class="line">     <span class="keyword">if</span> ([identifier isEqualToString:<span class="string">@"Repondre"</span>]) &#123;</span><br><span class="line">        <span class="comment">//Do stuff Here to handle action... </span></span><br><span class="line">     &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure></p>
<p>4、 在手机端app的appDelegate中处理后台的按钮事件[因推送服务器调整对线上版本有影响，暂未验证]:<br><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">void</span>)application:(<span class="built_in">UIApplication</span> *)application handleActionWithIdentifier:(<span class="built_in">NSString</span> *)identifier forRemoteNotification:(<span class="built_in">NSDictionary</span> *)userInfo completionHandler:(<span class="keyword">void</span> (^)())completionHandler &#123;</span><br><span class="line">     <span class="keyword">if</span> ([identifier isEqualToString:<span class="string">@"Decline"</span>]) &#123;</span><br><span class="line">        <span class="comment">//Do stuff Here to handle action... </span></span><br><span class="line">     &#125;</span><br><span class="line">    completionHandler();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>注册为后台类型的按钮在手机的通知框中也会显示，在手机端的响应方式如下<br><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">void</span>)application:(<span class="built_in">UIApplication</span> *)application didReceiveRemoteNotification:(<span class="built_in">NSDictionary</span> *)userInfo &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<p><strong>题记：</strong>任何一款优秀产品的背后都是一群为此呕心沥血的程序猿，前方多坑，注意避让！</p>
<p><strong>注意事项</strong><br>  1、真机测试的时候最方便的应该是使用adhoc证书，这个是苹果推送的要求。<br>  2、<strong>手表一定要戴在手腕上！手表一定要戴在手腕上！手表一定要戴在手腕上！</strong>重要的事情要说3遍。我曾傻傻地把手表放在桌上等通知，结果半天都没收到通知，通知全在手机上显示了。<br>  3、手机需要处于“黑屏状态”，只要屏幕亮着，消息都会出现在手机上。<br>  4、推送服务器的<code>JSON Payloads</code>格式一般需要重新调整。原先只有手机的时候alert只要有内容即可，现在需要分为title和body两部分了。如果要在手表中显示自定义通知样式，增加交互按钮，还需要定义category，value要和Watch中的Storyboard通知界面中的identifier一致，否则将显示苹果默认的通知样式，只有一个关闭按钮。<br>  新结构如下：<br>  {<br>    “aps” : {<br>        “alert” : {<br>            “title” : “新通知”,<br>            “body” : “OS X El Captain正式版今天推送……”,<br>        },<br>        “category”:”respond”,<br>        “badge” : 5,<br>    }<br>  }<br>]]>
    
    </summary>
    
      <category term="Apple Watch" scheme="http://idealife.github.io/tags/Apple-Watch/"/>
    
      <category term="通知" scheme="http://idealife.github.io/tags/%E9%80%9A%E7%9F%A5/"/>
    
      <category term="iDev" scheme="http://idealife.github.io/categories/iDev/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Hexo部署时提示Fatal： Could not read from remote repository的问题处理]]></title>
    <link href="http://idealife.github.io/2015/10/02/Hexo%E9%83%A8%E7%BD%B2%E6%97%B6%E6%8F%90%E7%A4%BAfatal-Could-not-read-from-remote-repository%E7%9A%84%E9%97%AE%E9%A2%98%E5%A4%84%E7%90%86/"/>
    <id>http://idealife.github.io/2015/10/02/Hexo部署时提示fatal-Could-not-read-from-remote-repository的问题处理/</id>
    <published>2015-10-02T01:41:26.000Z</published>
    <updated>2015-10-02T12:12:28.000Z</updated>
    <content type="html"><![CDATA[<p>第一次在Mac中配置好了hexo,发布的时候却一直提示：<br><code>Error: Permission denied (publickey).
fatal: Could not read from remote repository.</code><br>分析这个错误提示大致可以推断出是公钥配置的问题引起的。</p>
<p>但是github中我已经配置好了当前的公钥信息了，再次检查公钥。<br>0、github中公钥重新配置了一遍<br>1、git clone可以正确执行。<br>2、ssh -T idealife@github.com<br>也提示：Hi defnngj You’ve successfully authenticated, but GitHub does not provide shell access.<br>说明配置的公钥没有问题。<br>就是在执行sudo hexo deploy的时候报公钥问题。<br><a id="more"></a><br>为什么要加sudo呢？<br>在执行hexo命令时，如果不提权，就会一直提示db.json文件的写权限的错误：<br><code>Unhandled rejection Error: EACCES: permission denied, open &#39;/Users/idealife/Developer/blog/db.json&#39;
    at Error (native)</code><br>所以进行了权限提升。<br>以前一直是在window环境中配置，对于权限的认识比较浅。突然意识到，就是sudo引起的问题。</p>
<p>因为我生成公钥的命令是ssh-keygen -t rsa -C “idealife@github.com”<br>没有加sudo，生成的公钥是当前用户的，路径是 /Users/idealife/.ssh。而sudo hexo deploy命令执行的时候应该会去读取的root用户的公钥，很显然root下还没有对应的公钥信息生成。</p>
<p>随即立即验证这个推测。<br>1、为root生成publickey:sudo ssh-keygen -t rsa -C “idealife@github.com”，对应路径为/var/root/.ssh<br>2、提取公钥信息并配置到github中。问题又来了，在UI界面中是无法访问到/var下的root文件夹的。我们可以通过sudo cat /var/root/.ssh/id_rsa.pub可以绕开这个问题。<br>3、执行sudo hexo deploy，部署成功！</p>
<p>总结：在Linux或者UNIX环境中一定要注意权限问题！</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>第一次在Mac中配置好了hexo,发布的时候却一直提示：<br><code>Error: Permission denied (publickey).
fatal: Could not read from remote repository.</code><br>分析这个错误提示大致可以推断出是公钥配置的问题引起的。</p>
<p>但是github中我已经配置好了当前的公钥信息了，再次检查公钥。<br>0、github中公钥重新配置了一遍<br>1、git clone可以正确执行。<br>2、ssh -T idealife@github.com<br>也提示：Hi defnngj You’ve successfully authenticated, but GitHub does not provide shell access.<br>说明配置的公钥没有问题。<br>就是在执行sudo hexo deploy的时候报公钥问题。<br>]]>
    
    </summary>
    
      <category term="Git" scheme="http://idealife.github.io/tags/Git/"/>
    
      <category term="Hexo" scheme="http://idealife.github.io/tags/Hexo/"/>
    
      <category term="Hexo" scheme="http://idealife.github.io/categories/Hexo/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Wacth app无法在watchOS2.0中安装的问题探索]]></title>
    <link href="http://idealife.github.io/2015/10/01/Wacth-app%E6%97%A0%E6%B3%95%E5%9C%A8Watch-OS2-0%E4%B8%AD%E5%AE%89%E8%A3%85%E7%9A%84%E9%97%AE%E9%A2%98%E6%8E%A2%E7%B4%A2/"/>
    <id>http://idealife.github.io/2015/10/01/Wacth-app无法在Watch-OS2-0中安装的问题探索/</id>
    <published>2015-10-01T13:41:26.000Z</published>
    <updated>2015-10-10T01:40:25.000Z</updated>
    <content type="html"><![CDATA[<h3 id="问题描述：">问题描述：</h3><p>这段时间随着iOS9.0,以及watchOS2.0升级正式开启后，陆陆续续的就发现了很多问题。<br>其中一个情况就是，同事反映说，Apple Watch系统更新以后，testflight上的App无法安装watch app了，线上版本的App就能正常装上watch。<br>所以怀疑是苹果的证书验证机制可能变化了。毕竟Xcode7.0可以免$99真机调试了。<br><a id="more"></a></p>
<h3 id="探索">探索</h3><p>正好在做adhoc的签名包，也遇到了这个问题。</p>
<h5 id="组合1">组合1</h5><p>Xcode7.0 + iOS9.0 + watchOS2.0 + adhoc证书，直接编译App到真机中，结果安装Watch App就一直无法成功，在即将安装成功时，自动卸载，也无任何错误提示。</p>
<h5 id="组合2">组合2</h5><p>Xcode7.0 + iOS9.0 + watchOS1.0 + adhoc证书，就能很顺利的安装上了。<br>看来watchOS2的证书机制变化了。</p>
<h5 id="探索3">探索3</h5><p>因为线上版本没有问题，所以就准备用adhoc证书Archive的包，通过iTunes安装，这时Watch App又能顺利装上了watchOS2.0的系统了。<br>此时再用组合1的方式直接编译到手机，然后安装Watch App，竟然也成功安装上了。<br>可能是3的操作让Watch系统上存了授权信息，从而可以绕开了。</p>
<h3 id="相关">相关</h3><p>查了一下相关资料，发现在watchOS2.0 beta阶段有过类似的情况：<br><a href="https://forums.developer.apple.com/thread/9607" target="_blank" rel="external">Can anyone run watchOS2 beta 3 apps on the watch device while debugging with Xcode?</a><br>其中提到：<br>Update: I can run (not debug) every time on the watch by installing an ad hoc distribution through iTunes.<br>1、Product -&gt; Archive  [You may have some code signing issues to figure out here–especially if you have multiple people who sign the builds for your organization.]<br>2、Export… -&gt; for Ad Hoc Distribution<br>3、Uninstall the app from your iPhone.<br>4、Drop the ipa file onto iTunes.<br>5、Select your iPhone in iTunes, go to the Apps tab, and find the app you just dropped in.<br>6、Click install.<br>7、Click apply.<br>8、Make sure that “Show App on Apple Watch” is selected in the Apple Watch app, and wait for it to install.<br>It should run at least.  I wasn’t abble to attach the debugger to the processes, but I was able to see the performance of the changes that I had already tested on the simulator.<br>The good news is that performance of button and table responsiveness is probably 10x that of beta 2 if you have lots of buttons.  It was tough to get it to run, but I feel like there was a treasure at the end of the hunt. </p>
<h3 id="总结">总结</h3><p>因为苹果系统的封闭性，无法探索出更加有具体的原因。可能马上就会有官方的说明出来！<br>如果你又更好地解答，欢迎留言！</p>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="问题描述：">问题描述：</h3><p>这段时间随着iOS9.0,以及watchOS2.0升级正式开启后，陆陆续续的就发现了很多问题。<br>其中一个情况就是，同事反映说，Apple Watch系统更新以后，testflight上的App无法安装watch app了，线上版本的App就能正常装上watch。<br>所以怀疑是苹果的证书验证机制可能变化了。毕竟Xcode7.0可以免$99真机调试了。<br>]]>
    
    </summary>
    
      <category term="Apple Watch" scheme="http://idealife.github.io/tags/Apple-Watch/"/>
    
      <category term="Xcode" scheme="http://idealife.github.io/tags/Xcode/"/>
    
      <category term="watchOS2.0" scheme="http://idealife.github.io/tags/watchOS2-0/"/>
    
      <category term="iDev" scheme="http://idealife.github.io/categories/iDev/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[开卷有益]]></title>
    <link href="http://idealife.github.io/2015/10/01/hello-world/"/>
    <id>http://idealife.github.io/2015/10/01/hello-world/</id>
    <published>2015-10-01T12:41:26.000Z</published>
    <updated>2015-10-02T06:46:45.000Z</updated>
    <content type="html"><![CDATA[<p>由于没有备份原来的hexo模板，换了电脑后就不得不重新把这个残局收拾起来。<br>这个教训很深刻。<br>关于如何<a href="http://nodlee.com/2015/06/07/how-to-porting-hexo/#more" target="_blank" rel="external">移植</a>,可以参考这篇<a href="http://nodlee.com/2015/06/07/how-to-porting-hexo/#more" target="_blank" rel="external">文章</a></p>
<hr>
<h2 id="Hello_Github">Hello Github</h2><p>Github是一个神奇的网站，简直就是一个超级大的宝库，<br>接触越多就越能发现它的价值！</p>
<p>因此在这个平台上分享也是一件非常有意义的事情！<br>Leg’s go!</p>
<hr>
<p>在CSDN断断续续经营了几年的<a href="http://blog.csdn.net/qustdong/" target="_blank" rel="external">博客</a>最终还是会被现有的Github Pages所取代,虽然它的SEO已经做的非常不错了，但是这几年来的排版一直让我很痛苦。最近也增加了Markdown语法的支持，那也无法阻止我来到这片干净的乐土！</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>由于没有备份原来的hexo模板，换了电脑后就不得不重新把这个残局收拾起来。<br>这个教训很深刻。<br>关于如何<a href="http://nodlee.com/2015/06/07/how-to-porting-hexo/#more" target="_blank"]]>
    </summary>
    
  </entry>
  
</feed>
